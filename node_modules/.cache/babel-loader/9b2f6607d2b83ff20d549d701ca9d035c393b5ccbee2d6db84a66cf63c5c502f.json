{"ast":null,"code":"import { mapGetters, mapActions } from 'vuex';\nexport default {\n  name: \"AddEmployee\",\n  data() {\n    return {\n      title: \"Add Employee\",\n      empDetails: {},\n      empName: \"\",\n      empEmail: \"\",\n      empGender: \"\",\n      empPhoto: {},\n      empUniqueId: \"\",\n      empPassword: \"\",\n      empPasswordConfirmation: \"\",\n      error: {},\n      empId: \"\"\n    };\n  },\n  mounted() {\n    this.empId = this.$route.query.empId;\n    this.empDetails = this.empId && this.getEmployeeDetails(this.empId);\n    if (this.empDetails && Object.keys(this.empDetails)) {\n      this.setValueInModel();\n    }\n  },\n  computed: {\n    ...mapGetters([\"getEmployeeDetails\"])\n  },\n  methods: {\n    ...mapActions([\"addEmployee\", \"updateEmployee\"]),\n    confirmPassword() {\n      const obj = this.empPassword === this.empPasswordConfirmation;\n      if (!obj) {\n        this.error = {\n          err: obj,\n          text: 'Password not match!'\n        };\n        this.empPassword = \"\";\n        this.empPasswordConfirmation = \"\";\n      }\n    },\n    getUniqueId() {\n      return JSON.stringify(Math.random()).substr(length - 6);\n    },\n    setValueInModel() {\n      const {\n        id,\n        name,\n        email,\n        gender\n      } = this.empDetails;\n      this.empUniqueId = id;\n      this.empName = name;\n      this.empEmail = email;\n      this.empGender = gender;\n      // this.empPhoto = photo.file;\n    },\n\n    // validateFields(data) {\n    //     const {name, email, gender, photo, password}\n    // },  \n    addEmployeeDetails() {\n      const empDetails = {\n        name: this.empName,\n        id: this.empUniqueId || this.getUniqueId(),\n        email: this.empEmail,\n        gender: this.empGender,\n        photo: this.empPhoto,\n        password: this.empPassword\n      };\n      // this.validateFields(empDetails);\n      this.empId ? this.updateEmployee(empDetails) : this.addEmployee(empDetails);\n      this.clearEmployeeDetails();\n    },\n    previewFiles(event) {\n      const files = event.target.files;\n      const fileReader = new FileReader();\n      fileReader.addEventListener(\"load\", () => {\n        this.imageUrl = fileReader.result;\n      });\n      fileReader.readAsDataURL(files[0]);\n      this.empPhoto = {\n        file: files[0],\n        srcImage: fileReader\n      };\n    },\n    clearEmployeeDetails() {\n      this.empName = \"\";\n      this.empEmail = \"\", this.empGender = \"\";\n      this.empUniqueId = \"\";\n      this.empPasswordConfirmation = \"\";\n      this.empPassword = \"\";\n      this.$refs.uploadFile.value = null;\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["mapGetters","mapActions","name","data","title","empDetails","empName","empEmail","empGender","empPhoto","empUniqueId","empPassword","empPasswordConfirmation","error","empId","mounted","$route","query","getEmployeeDetails","Object","keys","setValueInModel","computed","methods","confirmPassword","obj","err","text","getUniqueId","JSON","stringify","Math","random","substr","length","id","email","gender","addEmployeeDetails","photo","password","updateEmployee","addEmployee","clearEmployeeDetails","previewFiles","event","files","target","fileReader","FileReader","addEventListener","imageUrl","result","readAsDataURL","file","srcImage","$refs","uploadFile","value"],"sourceRoot":"","sources":["F:\\vue\\employee-app\\employee-app\\src\\components\\AddEmployee.vue"],"sourcesContent":["<template>\r\n    <div class=\"add-emp\">\r\n        <form @submit.prevent=\"addEmployeeDetails()\" class=\"emp-form-container\" autocomplete=\"off\">\r\n            <div class=\"emp-title field\">\r\n                <h3>{{ title }}</h3>\r\n            </div>\r\n            <div class=\"emp-error field\" v-if=\"!error.err\">\r\n                <span>{{ error.text }}</span>\r\n            </div>\r\n            <div class=\"emp-name field row\">\r\n                <label for=\"emp-name\" class=\"col-sm-3\">Name</label>\r\n                <div class=\"emp-input-field col-sm-7\">\r\n                    <input type=\"text\" name=\"emp-name\" required id=\"emp-name\" v-model=\"empName\"  placeholder=\"Enter your username\">\r\n                </div>\r\n            </div>\r\n            <div class=\"emp-email field row\">\r\n                <label for=\"emp-email\" class=\"col-sm-3\">Email</label>\r\n                <div class=\"emp-input-field col-sm-7\">\r\n                    <input type=\"email\" name=\"emp-email\" required  id=\"emp-email\" v-model=\"empEmail\" autocomplete=\"off\" placeholder=\"email@example.com\">\r\n                </div>\r\n            </div>\r\n            <div class=\"emp-password field row\">\r\n                <label for=\"emp-password\" class=\"col-sm-3\">Password</label>\r\n                <div class=\"emp-input-field col-sm-7\">\r\n                    <input @input=\"error.err = true\" type=\"password\" name=\"emp-password\" required  id=\"emp-password\" v-model=\"empPassword\" placeholder=\"Enter a password\" autocomplete=\"new-password\">\r\n                </div>\r\n            </div>\r\n            <div class=\"emp-password_confirmation field row\">\r\n                <label for=\"emp-password_confirmation\" class=\"col-sm-3\">Confirm Password</label>\r\n                <div class=\"emp-input-field col-sm-7\">\r\n                    <input type=\"password\" required name=\"emp-password_confirmation\" id=\"emp-password_confirmation\" v-model=\"empPasswordConfirmation\"  placeholder=\"Re-type password\"\r\n                    @blur=\"confirmPassword\">\r\n                </div>\r\n            </div>\r\n            <div class=\"emp-gender field row\">\r\n                <label for=\"emp-gender\" class=\"col-sm-3\">Gender</label>\r\n                <div class=\"emp-input-field col-sm-6\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-6\">\r\n                            <input type=\"radio\" name=\"gender\" id=\"gender-male\" value=\"male\" v-model=\"empGender\">\r\n                            <label for=\"male\" class=\"emp-input-radio\">Male</label>\r\n                        </div>\r\n                        <div class=\"col-sm-6\">\r\n                            <input type=\"radio\" name=\"gender\" id=\"gender-female\" value=\"female\" v-model=\"empGender\">\r\n                            <label for=\"female\" class=\"emp-input-radio\">Female</label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"emp-file-upload field row\">\r\n                <label for=\"upload-photo\" class=\"col-sm-3\">User Image</label>\r\n                <input type=\"file\" name=\"emp-file\" id=\"emp-file\" class=\"col-sm-7\" ref=\"uploadFile\"\r\n                    accept=\"image/png, image/gif, image/jpeg, image/jpg\"\r\n                    @change=\"previewFiles\"\r\n                >\r\n            </div>\r\n            <div class=\"emp-submit field row\">\r\n                <div class=\"col-sm-5\">\r\n                    <input type=\"submit\" :disabled=\"!error.err\" value=\"Submit\" class=\"col-sm-12\">\r\n                </div>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapGetters, mapActions } from 'vuex';\r\nexport default {\r\n    name: \"AddEmployee\",\r\n    data() {\r\n        return {\r\n            title: \"Add Employee\",\r\n            empDetails: {},\r\n            empName: \"\",\r\n            empEmail: \"\",\r\n            empGender: \"\",\r\n            empPhoto: {},\r\n            empUniqueId: \"\",\r\n            empPassword: \"\",\r\n            empPasswordConfirmation: \"\",\r\n            error: {},\r\n            empId: \"\",\r\n        }\r\n    },\r\n    mounted() {\r\n        this.empId = this.$route.query.empId;\r\n        this.empDetails = this.empId && this.getEmployeeDetails(this.empId);\r\n        if (this.empDetails && Object.keys(this.empDetails)) {\r\n            this.setValueInModel();\r\n        }\r\n    },\r\n    computed: {\r\n        ...mapGetters([\"getEmployeeDetails\"]),\r\n    },\r\n    methods: {\r\n        ...mapActions([\"addEmployee\", \"updateEmployee\"]),\r\n        confirmPassword() {\r\n            const obj = (this.empPassword === this.empPasswordConfirmation);\r\n            if(!obj) {\r\n                this.error = { err: obj, text: 'Password not match!'};\r\n                this.empPassword=\"\"; this.empPasswordConfirmation=\"\";\r\n            }\r\n        },\r\n        getUniqueId() {\r\n            return JSON.stringify(Math.random()).substr(length-6);\r\n        },\r\n        setValueInModel() {\r\n            const { id, name, email, gender } = this.empDetails;\r\n            this.empUniqueId = id;\r\n            this.empName = name;\r\n            this.empEmail = email;\r\n            this.empGender = gender;\r\n            // this.empPhoto = photo.file;\r\n        },\r\n        // validateFields(data) {\r\n        //     const {name, email, gender, photo, password}\r\n        // },  \r\n        addEmployeeDetails() {\r\n            const empDetails = {\r\n                name: this.empName,\r\n                id: this.empUniqueId || this.getUniqueId(),\r\n                email: this.empEmail,\r\n                gender: this.empGender,\r\n                photo: this.empPhoto,\r\n                password: this.empPassword,\r\n            };\r\n            // this.validateFields(empDetails);\r\n            this.empId ? this.updateEmployee(empDetails) : this.addEmployee(empDetails);\r\n            this.clearEmployeeDetails();\r\n        },\r\n        previewFiles(event) {\r\n            const files = event.target.files;\r\n            const fileReader = new FileReader();\r\n            fileReader.addEventListener(\"load\", () => {\r\n                this.imageUrl = fileReader.result;\r\n            })\r\n            fileReader.readAsDataURL(files[0]);\r\n            this.empPhoto = {\r\n                file: files[0],\r\n                srcImage: fileReader\r\n            }\r\n        },\r\n        clearEmployeeDetails() {\r\n            this.empName=\"\";\r\n            this.empEmail=\"\",\r\n            this.empGender=\"\";\r\n            this.empUniqueId=\"\";\r\n            this.empPasswordConfirmation= \"\";\r\n            this.empPassword= \"\";\r\n            this.$refs.uploadFile.value=null;\r\n        }\r\n    },\r\n}\r\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}